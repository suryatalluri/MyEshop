/**
 * Copyright (C) 2015 WaveMaker, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.eshopping;
// Generated 28 Nov, 2014 11:40:08 AM by Hibernate Tools 7.1.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;


import javax.persistence.Transient;
import javax.persistence.CascadeType;


/**
 * User generated by hbm2java
 */
@Entity
@Table(name="USER"
    ,schema="PUBLIC"
    ,catalog="PUBLIC"
    , uniqueConstraints = @UniqueConstraint(columnNames="EMAIL") 
)
public class User  implements java.io.Serializable {


     private Integer id;
     private String landmark;
     private String phone;
     private String pin;
     private String email;
     private String street;
     private String name;
     private String productBought;
     private String password;
     private String country;
     private String city;
     private Set<Itemorder> itemorders = new HashSet<Itemorder>(0);
     private Set<Productorder> productorders = new HashSet<Productorder>(0);

    public User() {
    }

	
    public User(String landmark, String phone, String pin, String email, String street, String name, String password, String country, String city) {
        this.landmark = landmark;
        this.phone = phone;
        this.pin = pin;
        this.email = email;
        this.street = street;
        this.name = name;
        this.password = password;
        this.country = country;
        this.city = city;
    }
    public User(String landmark, String phone, String pin, String email, String street, String name, String productBought, String password, String country, String city, Set<Itemorder> itemorders, Set<Productorder> productorders) {
       this.landmark = landmark;
       this.phone = phone;
       this.pin = pin;
       this.email = email;
       this.street = street;
       this.name = name;
       this.productBought = productBought;
       this.password = password;
       this.country = country;
       this.city = city;
       this.itemorders = itemorders;
       this.productorders = productorders;
    }

     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ID", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    
    @Column(name="LANDMARK", nullable=false)
    public String getLandmark() {
        return this.landmark;
    }
    
    public void setLandmark(String landmark) {
        this.landmark = landmark;
    }

    
    @Column(name="PHONE", nullable=false, length=15)
    public String getPhone() {
        return this.phone;
    }
    
    public void setPhone(String phone) {
        this.phone = phone;
    }

    
    @Column(name="PIN", nullable=false)
    public String getPin() {
        return this.pin;
    }
    
    public void setPin(String pin) {
        this.pin = pin;
    }

    
    @Column(name="EMAIL", unique=true, nullable=false)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="STREET", nullable=false)
    public String getStreet() {
        return this.street;
    }
    
    public void setStreet(String street) {
        this.street = street;
    }

    
    @Column(name="NAME", nullable=false)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="PRODUCT_BOUGHT")
    public String getProductBought() {
        return this.productBought;
    }
    
    public void setProductBought(String productBought) {
        this.productBought = productBought;
    }

    
    @Column(name="PASSWORD", nullable=false)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="COUNTRY", nullable=false)
    public String getCountry() {
        return this.country;
    }
    
    public void setCountry(String country) {
        this.country = country;
    }

    
    @Column(name="CITY", nullable=false)
    public String getCity() {
        return this.city;
    }
    
    public void setCity(String city) {
        this.city = city;
    }

@OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="user")
    public Set<Itemorder> getItemorders() {
        return this.itemorders;
    }
    
    public void setItemorders(Set<Itemorder> itemorders) {
        this.itemorders = itemorders;
    }

@OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="user")
    public Set<Productorder> getProductorders() {
        return this.productorders;
    }
    
    public void setProductorders(Set<Productorder> productorders) {
        this.productorders = productorders;
    }




}

